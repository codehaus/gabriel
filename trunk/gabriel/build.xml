<?xml version="1.0" encoding="UTF-8"?>

<!--
  ** @author Stephan J. Schmidt
  ** @version $Id: build.xml,v 1.7 2005-05-11 12:50:10 stephan Exp $
  -->
<project basedir="." default="compile" name="Gabriel">

  <property file="conf/build.properties"/>

  <path id="test.classpath">
    <pathelement location="${lib}/junit-3.8.1.jar"/>
    <pathelement location="${lib}/junit-addons-1.4.jar"/>
    <pathelement location="${lib}/jmock-1.0.0.jar"/>
    <pathelement location="${lib}/dynaop-1.0-beta.jar"/>
    <pathelement location="${lib}/cglib-asm-1.0.jar"/>
    <pathelement location="${lib}/clover.jar"/>
    <pathelement location="${lib}/picocontainer-1.0.jar"/>
    <pathelement location="${lib}/nanocontainer-dynaop-1.0-beta-1-SNAPSHOT.jar"/>
    <!-- <pathelement location="${lib}/jakarta-oro-2.0.7.jar"/> -->
    <!-- <pathelement location="${lib}/bsh-2.0b1.jar"/> -->
    <pathelement location="${src}/test/gabriel/test/components/io"/>
  </path>

  <path id="classpath">
    <path refid="test.classpath"/>
  </path>

  <target name="prepare">
    <mkdir dir="${jar}"/>
    <mkdir dir="${out}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${dist}/distributions"/>
    <mkdir dir="${dist}/jars"/>
  </target>

  <patternset id="dist.sources">
     <include name="Changes.txt"/>
     <include name="conf/**"/>
     <include name="docs/**"/>
     <include name="src/**"/>
     <include name="licenses/**"/>
     <include name="README"/>
     <include name="NOTICE"/>
     <include name="LICENSE.txt"/>
     <include name="build.xml"/>
     <include name="lib/**"/>
     <include name="jar/**"/>
  </patternset>

  <target name="compile" depends="prepare">
    <javac srcdir="${src}/java" destdir="${out}" classpathref="classpath" debug="${debug}"/>
  </target>

  <target name="compile-test" depends="prepare">
    <javac srcdir="${src}/test" destdir="${out}" classpathref="classpath" debug="${debug}">
      <include name="gabriel/test/**"/>
    </javac>
  </target>

  <target name="example" depends="jar">
    <java classname="example.ProtectMethods">
      <classpath refid="classpath"/>
      <classpath location="${jar}/${appname}.jar"/>
    </java>
  </target>

  <target name="test" depends="jar" description="run compliance tests">
    <junit printsummary="true">
      <formatter usefile="false" type="plain"/>
      <test name="${appname}.test.${testTarget}"/>
      <classpath refid="classpath"/>
      <classpath location="${jar}/${appname}.jar"/>
    </junit>
  </target>

  <target name="jar" depends="compile, compile-test" description="build ${appname}.jar">
    <jar destfile="${jar}/${appname}.jar" excludes="**/CVS"
      manifest="${conf}/META-INF/manifest.${appname}">
      <fileset dir="${out}/" includes="**"/>
      <fileset dir="${out}/" includes="**"/>
      <fileset dir="${src}" includes="META-INF/**"/>
      <fileset dir="." includes="conf/**"/>
      <fileset dir="${src}" includes="*.properties"/>
      <fileset dir="${conf}/" includes="*.properties"/>
      <fileset dir="${conf}/" includes="*.bsh"/>
    </jar>
  </target>

  <target name="dist" depends="clean, test, jar">
    <delete failonerror="false" includeEmptyDirs="true">
      <fileset dir="${out}" includes="**"/>
    </delete>
    <copy file="${jar}/${appname}.jar" tofile="${dist}/jars/${appname}-${version}-${status}.jar"/>
    <zip destfile="${dist}/distributions/${appname}-${version}-${status}-src.zip">
      <zipfileset dir="." prefix="${appname}-${version}-${status}">
        <patternset refid="dist.sources"/>
      </zipfileset>
    </zip>
    <tar destfile="${dist}/distributions/${appname}-${version}-${status}-src.tar.gz" compression="gzip">
      <tarfileset dir="." prefix="${appname}-${version}-${status}" mode="700">
        <patternset refid="dist.sources"/>
      </tarfileset>
    </tar>
  </target>

  <target description="clean up compiled code" name="clean">
    <delete failonerror="false">
      <fileset dir="${dist}" includes="**"/>
    </delete>
    <delete failonerror="false">
      <fileset dir="${out}" includes="**"/>
    </delete>
    <delete failonerror="false">
      <fileset dir="${jar}" includes="**"/>
    </delete>
  </target>

  <target description="generation javadocs" name="javadoc">
    <javadoc packagenames="gabriel.*"
      sourcepath="src/java"
      excludepackagenames="gabriel.test.*"
      defaultexcludes="yes"
      destdir="docs/api"
      author="true"
      version="true"
      use="true"
      windowtitle="Gabriel Access Framework">
      <doctitle><![CDATA[<h1>Gabriel</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright &#169; 2003 Matthias L. Jugel, Stephan J. Schmidt. All Rights Reserved
.</i>]]></bottom>
      <!--    <link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/> -->
    </javadoc>
  </target>


  <!-- CLOVER -->

  <taskdef resource="clovertasks"/>

  <target name="with.clover">
     <clover-setup initString="clover_coverage.db/"/>
  </target>

  <target name="clover.log" depends="with.clover">
  </target>

  <target name="report" depends="with.clover">
   <clover-report>
      <current outfile="clover_html" title="clover Gabriel">
         <format type="html"/>
      </current>
   </clover-report>
  </target>

</project>

