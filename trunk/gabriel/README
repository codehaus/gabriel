1. Introduction
---------------

What is Gabriel? Gabriel is a security framework to restirct actions of users.
Think about EJB security but without EJB.

> ant test

and

> ant example

work.

The example is called ProtectMethods.java

2. Overview
--------------

The framework has 3 parts:

1.) ACL core framework for matching principals to permissions

2.) Components like AccessManager to integrate ACLs with applications and store and create ACLs

3.) Components and interceptors to protect method calls

3 depends on 2 depends on 1

Methods are mapped to permissions:
POST_BLOG { Blog.post Blog.store }

This way permissions like POST_BLOG can be used to protect method calls
and from within the GUI the permissions can be used to check 
whether to display a "POST" button.

Principals are mapped to permissions:
Editor { POST_BLOG REMOVE_POST }

Users are mapped to principals (with subjects), but this
is outside the scope of the framework right now and might need
another framework like OSUSer to map principals to users and
to authenticate users.

Currently the application would map users to subjects and
principals somehow.

3. Thoughts for configurations
-------------------------------

Configutation:

/** Implementation
   *
   *  - with annotations (javadoc)
   *  - with Permissions
   *
   * ... MethodStore
   *
   *  POST_BLOG { Blog.setName  }
   *
   *  ... AclStore
   *
   *  POST_BLOG { stephan admin }
   *  (probably better to see which principals have a permission)
   * 
   *  or
   *
   * stephan { POST_BLOG }
   * admin { POST_BLOG DELETE_BLOG }
   * (probably better to see which permissions a principal has)
   * 
   * (or AclStore and MethodStore read
   *  from the same file). Or one component which implements all
   *  interfaces)
   *
   * - with Groovy
   * - with Groovy Markup
   */
